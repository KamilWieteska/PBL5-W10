/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.iot.workshop.devicesimulator;

import com.iot.workshop.devicesimulator.device.CertificateProvider;
import com.iot.workshop.devicesimulator.device.DeviceFactory;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.concurrent.CountDownLatch;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

public class App {

    private static final String ENDPOINT = "a2t59zkzsbiwfo-ats.iot.eu-north-1.amazonaws.com";

    private static final String DEVICE_ID = "DEVICE-12";

    private static final long PERIOD = 20;

    private static Logger logger = LoggerFactory.getLogger( App.class );

    public static void main( String[] args ) throws InterruptedException {

        var controller = DeviceFactory.device( ENDPOINT, CertificateProvider.instance(), DEVICE_ID );

        logger.info( "Connecting {} with the endpoint {}", DEVICE_ID, ENDPOINT );

        controller.connect();

        ScheduledExecutorService scheduledExecutorService = Executors.newSingleThreadScheduledExecutor();

        logger.info( "Publishing messages with fixed rate of {} seconds.", PERIOD );

        CountDownLatch countDownLatch = new CountDownLatch( 4 );

        scheduledExecutorService.scheduleAtFixedRate(
                () -> {
                    controller.sendTelemetry();
                    countDownLatch.countDown();
                },
                0,
                PERIOD,
                TimeUnit.SECONDS
                                                    );

        countDownLatch.await();

        scheduledExecutorService.shutdown();

        logger.info( "Closing the connection" );

        controller.disconnect();

        logger.info( "All done!" );
    }

}
